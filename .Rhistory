filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% pull(state)
counties <- counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% pull(state)
counties
counties <- counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% pull(state, date)
counties
counties <- counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% pull(state)
counties <- counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% pull(state)
counties
# 1.d Load the *county level* data from the following URL into a variable called `counties`
# NOTE: This is a large dataset. It may take 30-60 seconds to load.
# https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-counties-covid-2023.csv
counties <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-counties-covid-2023.csv", stringsAsFactors = FALSE)
my_answer <- counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% pull(state)
counties
my_answer
my_answer <- counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% pull(state)
my_answer
my_answer <- counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% pull(state)
# 1.d Load the *county level* data from the following URL into a variable called `counties`
# NOTE: This is a large dataset. It may take 30-60 seconds to load.
# https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-counties-covid-2023.csv
counties <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-counties-covid-2023.csv", stringsAsFactors = FALSE)
# 1.d Load the *county level* data from the following URL into a variable called `counties`
# NOTE: This is a large dataset. It may take 30-60 seconds to load.
# https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-counties-covid-2023.csv
counties <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-counties-covid-2023.csv", stringsAsFactors = FALSE)
View(counties)
counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% pull(state)
my_answer
my_answer <- counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE))
my_answer
my_answer <- counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% select(date, county, state, new_deaths_counties)
my_answer
# 5. You Turn!
-------------------------------------------------
# 5.a Now it's your turn to ask your own question! Come up with a new question about this COVID data, and then write code to answer it (at least 2-3 lines)
# QUESTION:  Write your question in English language words here
# Add a new column to your `counties` data frame called `new_deaths` — that is, the number new deaths each day.
# State the date, county, state, and the number of the most new deaths and in the U.S. occurred.
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% select(date, county, state, new_deaths_counties)
my_answer
# 5. You Turn!
-------------------------------------------------
# 5.a Now it's your turn to ask your own question! Come up with a new question about this COVID data, and then write code to answer it (at least 2-3 lines)
# QUESTION:  Write your question in English language words here
# Add a new column to your `counties` data frame called `new_deaths` — that is, the number new deaths each day.
# State the date, county, state, and the number of the most new deaths and in the U.S. occurred.
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- counties %>% mutate(new_deaths_counties = deaths - lag(deaths)) %>%
filter(new_deaths_counties == max(new_deaths_counties, na.rm = TRUE)) %>% select(date, county, state, new_deaths_counties)
my_answer
# 1.b Load the *national level* data from the following URL into a variable called `national`
# https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-national-covid-2023.csv
national <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-national-covid-2023.csv", stringsAsFactors = FALSE)
# 1.c Load the *state level* data from the following URL into a variable called `states`
# https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-states-covid-2023.csv
states <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-states-covid-2023.csv", stringsAsFactors = FALSE)
# 1.d Load the *county level* data from the following URL into a variable called `counties`
# NOTE: This is a large dataset. It may take 30-60 seconds to load.
# https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-counties-covid-2023.csv
counties <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-counties-covid-2023.csv", stringsAsFactors = FALSE)
# 1.e How many observations (rows) are in each dataset?
# Create `obs_national`, `obs_states`, `obs_counties`
obs_national <- nrow(national)
obs_states <- nrow(states)
obs_counties <- nrow(counties)
# 1.f How many features (columns) are there in each dataset?
# Create `num_features_national`, `num_features_states`, `num_features_counties`
num_features_national <- ncol(national)
num_features_states <- ncol(states)
num_features_counties <- ncol(counties)
# 2.a How many total COVID cases have there been in the U.S. by the most recent date in the dataset? Make sure to pull() this number `total_us_cases`
total_us_cases <- national %>% filter(date == max(date, na.rm = TRUE)) %>% pull(cases)
# 2.b How many total COVID-related deaths have there been in the U.S. by the most recent date in the dataset? Make sure to pull() this number `total_us_deaths`
total_us_deaths <- national %>% filter(date == max(date, na.rm = TRUE)) %>% pull(deaths)
# 2.c Which state has had the highest number of COVID cases? Make sure to pull() this value `state_highest_cases`
state_highest_cases <- states %>% filter(cases == max(cases, na.rm = TRUE)) %>% pull(state)
# 2.d What is the highest number of cases in a state? Make sure to pull() this number `num_highest_state`
num_highest_state <- states %>% filter(cases == max(cases, na.rm = TRUE)) %>% pull(cases)
# 2.e Which state has the highest ratio of deaths to cases (deaths/cases), as of the most recent date? Make sure to pull() this value
# HINT: You may need to create a new column in order to do this. `state_highest_ratio`
state_highest_ratio <- states %>% filter(date == max(date, na.rm = TRUE)) %>% mutate(ratio = deaths/cases) %>% filter(ratio == max(ratio, na.rm = TRUE)) %>% pull(state)
# 2.f Which state has had the fewest number of cases as of the most
# recent date? Make sure to pull() this value `state_lowest_cases`
state_lowest_cases <- states %>% filter(date == max(date)) %>% filter(cases == min(cases)) %>% pull(state)
# 2.k Add a new column to your `national` data frame called `new_cases` — that is, the number new cases each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- national %>% mutate(new_cases = cases - lag(cases))
# 2.l Similarly, the `deaths` columns is *not* the number of new deaths per day.
# Add  a new column to the `national` data frame called `new_deaths` that has the number of *new* deaths each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- national %>% mutate(new_deaths = deaths - lag(deaths))
# 4.a Create a `total_cases_counties` dataframe that adds up all the COIVD cases for all the counties
# for every date in the counties dataframe.
# You should name the columns `date` and `county_total_cases`.
total_cases_counties <- counties %>% group_by(date) %>% summarize(county_total_cases = sum(cases))
View(total_cases_counties)
# 4.b Join `total_cases_counties` with the `national` dataframe.
# Save this dataframe as `all_totals`.
all_totals <-  left_join(total_cases_counties, national, by ="date")
View(all_totals)
# 4.c Filter the all_totals dataframe to find only the rows where the "county_total_cases" column does not match the "cases" column
# Save as national_county_diff
national_county_diff <- all_totals %>% filter(cases != county_total_cases)
View(national_county_diff)
# 4.b Join `total_cases_counties` with the `national` dataframe.
# Save this dataframe as `all_totals`.
all_totals <-  left_join(total_cases_counties, national, by ="date")
View(all_totals)
# 4.c Filter the all_totals dataframe to find only the rows where the "county_total_cases" column does not match the "cases" column
# Save as national_county_diff
national_county_diff <- all_totals %>% filter(cases != county_total_cases)
View(national_county_diff)
# 4.a Create a `total_cases_counties` dataframe that adds up all the COIVD cases for all the counties
# for every date in the counties dataframe.
# You should name the columns `date` and `county_total_cases`.
total_cases_counties <- counties %>% group_by(date) %>% summarize(county_total_cases = sum(cases))
# 4.b Join `total_cases_counties` with the `national` dataframe.
# Save this dataframe as `all_totals`.
all_totals <-  left_join(total_cases_counties, national, by ="date")
View(total_cases_counties)
library(tidyverse)
library(dplyr)
# 1.f How many features (columns) are there in each dataset?
# Create `num_features_national`, `num_features_states`, `num_features_counties`
num_features_national <- ncol(national)
num_features_national
# 2.i Because there are multiple counties with the same name across states, it will be helpful to have a column that stores the county and state together, in this form: "COUNTY, STATE".
# Therefore, add a new column to your `counties` data frame called `location` that stores the county and state (separated by a comma and space).
counties <- counties %>% mutate(location = paste0(county,", ", state))
counties
# 4.d Calculate the number of rows in the national_county_diff dataframe
# Save as num_national_county_diff
num_national_county_diff <- nrow(national_county_diff)
my_answer
library(readr)
depression_anxiety_data <- read_csv("Desktop/INFO201/exploratory-analysis-BadaLee2000/depression_anxiety_data.csv")
View(depression_anxiety_data)
library(dplyr)
library(ggplot2)
#creates data frame with information from csv file
mentalhealth_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv")
#creates dataframe with just gender and depression severity
gender_df <- mentalhealth_df %>% group_by(gender) %>% select(depression_severity)
#creates bar chart, uses color for gender
ggplot(data = gender_df) +
geom_bar(aes(x = depression_severity, fill = gender))
mentalhealth_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv")
#creates dataframe with just age and depression severity
age_df <- mentalhealth_df %>% group_by(age) %>% select(depression_severity)
#creates bar chart, uses color for depression severity
ggplot(data = age_df) +
geom_histogram(aes(x = age, fill = depression_severity))
mental_health_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv", stringsAsFactors = FALSE)
# Create a horizontal bar chart showing the relationship between a the severity of a college students depression and the year of college they're in.
ggplot(mental_health_df,
aes(x = school_year,
y = 1.0,
fill = depression_severity)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
labs(title = "Severity of Depression in College Students", x = "Count of College Students", y = "Year of College", fill = "Depression Severity")
#creates data frame with information from csv file
mentalhealth_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv")
#creates dataframe with just gender and depression severity
gender_df <- mentalhealth_df %>% group_by(gender) %>% select(depression_severity)
#creates bar chart, uses color for gender
ggplot(data = gender_df) +
geom_bar(aes(x = depression_severity, fill = gender))
mentalhealth_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv")
#creates dataframe with just age and depression severity
age_df <- mentalhealth_df %>% group_by(age) %>% select(depression_severity)
#creates bar chart, uses color for depression severity
ggplot(data = age_df) +
geom_histogram(aes(x = age, fill = depression_severity))
mentalhealth_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv")
#creates dataframe with just age and depression severity
age_df <- mentalhealth_df %>% group_by(age) %>% select(depression_severity)
#creates bar chart, uses color for depression severity
ggplot(data = age_df) +
geom_histogram(aes(x = age, fill = depression_severity))
#creates data frame with information from csv file
mentalhealth_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv")
#creates dataframe with just gender and depression severity
gender_df <- mentalhealth_df %>% group_by(gender) %>% select(depression_severity)
#creates bar chart, uses color for gender
ggplot(data = gender_df) +
geom_bar(aes(x = depression_severity, fill = gender))
mental_health_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv", stringsAsFactors = FALSE)
# Create a horizontal bar chart showing the relationship between a the severity of a college students depression and the year of college they're in.
ggplot(mental_health_df,
aes(x = school_year,
y = 1.0,
fill = depression_severity)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
labs(title = "Severity of Depression in College Students", x = "Count of College Students", y = "Year of College", fill = "Depression Severity")
# Load the necessary packages
library(dplyr)
library(ggplot2)
# Create a data frame from https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv
mental_health_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv", stringsAsFactors = FALSE)
# Create a horizontal bar chart showing the relationship between a the severity of a college students depression and the year of college they're in.
ggplot(mental_health_df,
aes(x = school_year,
y = 1.0,
fill = depression_severity)) +
geom_bar(position = "fill", stat = "identity") +
coord_flip() +
labs(title = "Severity of Depression in College Students", x = "Count of College Students", y = "Year of College", fill = "Depression Severity")
# age (18-24) : max number of depression_severity
summarty <- read.csv("depression_anxiety_data.csv", stringsAsFactors = FALSE)
summarty <- read.csv("depression_anxiety_data.csv", stringsAsFactors = FALSE)
summarty <- read.csv("depression_anxiety_data.csv", stringsAsFactors = FALSE)
# age (18-24) : max number of depression_severity
summary <- read.csv("depression_anxiety_data.csv", stringsAsFactors = FALSE)
# age (18-24) : max number of depression_severity
summary <- read.csv("depression_anxiety_data.csv", stringsAsFactors = FALSE)
# age (18-24) : max number of depression_severity
summary <- read.csv("depression_anxiety_data.csv")
setwd("~/Desktop/INFO201/exploratory-analysis-BadaLee2000")
# age (18-24) : max number of depression_severity
summary <- read.csv("depression_anxiety_data.csv")
# age (18-24) : max number of depression_severity
num_depression <- sum(str_detect(depression_severity, "Mild"))
# Summary
library("stringr")
# age (18-24) : max number of depression_severity
num_depression <- sum(str_detect(depression_severity, "Mild"))
# age (18-24) : max number of depression_severity
num_depression <- sum(str_detect(depression_severity, "Mild"))
# age (18-24) : max number of depression_severity
num_depression <- sum(str_detect(depression_severity, "Mild"))
num_depression <- sum(str_detect(depression_severity, "Mild"))
# Summary
library("stringr")
summary <- read.csv("depression_anxiety_data.csv", stringsAsFactors = FALSE)
# age (18-24) : max number of depression_severity
num_depression <- sum(str_detect(depression_severity, "Mild"))
depression <-  summary_data$depression_severity
summary_data <- read.csv("depression_anxiety_data.csv", stringsAsFactors = FALSE)
# age (18-24) : max number of depression_severity
depression <-  summary_data$depression_severity
num_depression <- sum(str_detect(depression_severity, "Mild"))
summary_data <- read.csv("depression_anxiety_data.csv", stringsAsFactors = FALSE)
# age (18-24) : max number of depression_severity
depression <-  summary_data$depression_severity
num_depression <- sum(str_detect(depression_severity, "Mild"))
num_depression <- sum(str_detect(depression, "Mild"))
num_depression
# age (18-24) : max number of depression_severity
num_depression <- filter(depression_severity == "Mild")
summary_data <- read.csv("depression_anxiety_data.csv", stringsAsFactors = FALSE)
# age (18-24) : max number of depression_severity
num_depression <- filter(depression_severity == "Mild")
# age (18-24) : max number of depression_severity
num_depression <- filter(17 < age < 25)
num_depression
num_depression <- filter(17 < age < 25)
# age (18-24) : max number of depression_severity
num_depression <- filter(17 < age)
num_depression <- summary_data %>% filter(17 < age)
num_depression
# age (18-24) : max number of depression_severity
num_depression <- summary_data %>% filter(17 < age)
# age (18-24) : max number of depression_severity
num_depression <- summary_data %>% filter(17 < age < 25)
# age (18-24) : max number of depression_severity
num_depression <- summary_data %>% filter(17 < age && age < 25)
# age (18-24) : max number of depression_severity
num_depression <- summary_data %>% filter(17 < age & age < 25)
num_depression
View(num_depression)
# age (18-24) : max number of depression_severity
num_depression <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_severity == "Mild")
nrow(num_depression)
View(num_depression)
# age (18-24) : max number of depression_severity
num_depression <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_severity == "Mild")
View(num_depression)
# age (18-24) : max number of depression_severity
num_depression <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_severity == "Severe")
nrow(num_depression)
depression_unique <- summary_data %>% unique(depression_severity)
library(dplyr)
library(ggplot2)
#creates data frame with information from csv file
mentalhealth_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv")
#creates dataframe with just gender and depression severity
gender_df <- mentalhealth_df %>% group_by(gender) %>% select(depression_severity)
#creates bar chart, uses color for gender
ggplot(data = gender_df) +
geom_bar(aes(x = depression_severity, fill = gender))
nrow(num_depression_severe)
# age (18-24) : max number of depression_severity
num_depression_severe <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_severity == "Severe")
nrow(num_depression_severe)
View(num_depression_severe)
# Filter by gender
depression_gender <- group_by(gender) %>% filter(anxiousness == "TRUE")
# Filter by gender
depression_gender <- summary_data %>% group_by(gender) %>% filter(anxiousness == "TRUE")
depression_gender
View(depression_gender)
# Filter by gender
depression_gender <- summary_data %>% group_by(gender) %>% nrow(filter(anxiousness == "TRUE"))
# Filter by gender
depression_gender <- summary_data %>% group_by(gender) %>% filter(anxiousness == "TRUE")
depression_gender
View(depression_gender)
View(depression_anxiety_data)
# find the number of those who answered "severe" for their depression severity in ages between 18-24
depression_age_severe <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_severity == "Severe")
nrow(depression_age_severe)
nrow(depression_age_severe)
# age (18-24) : max number of depression_severity
summary <- read.csv("depression_anxiety_data.csv", stringsAsFactors = FALSE)
depression_age_severe <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_severity == "Severe")
> nrow(depression_age_severe)
nrow(depression_age_severe)
library(tidyverse)
library(dplyr)
# 1.b Load the *national level* data from the following URL into a variable called `national`
# https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-national-covid-2023.csv
national <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-national-covid-2023.csv", stringsAsFactors = FALSE)
View(national)
# 1.c Load the *state level* data from the following URL into a variable called `states`
# https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-states-covid-2023.csv
states <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-states-covid-2023.csv", stringsAsFactors = FALSE)
View(states)
# 1.d Load the *county level* data from the following URL into a variable called `counties`
# NOTE: This is a large dataset. It may take 30-60 seconds to load.
# https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-counties-covid-2023.csv
counties <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/raw/main/us-counties-covid-2023.csv", stringsAsFactors = FALSE)
View(counties)
library(dplyr)
library(ggplot2)
#creates data frame with information from csv file
mentalhealth_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv")
#creates dataframe with just gender and depression severity
gender_df <- mentalhealth_df %>% group_by(gender) %>% select(depression_severity)
#creates bar chart, uses color for gender
ggplot(data = gender_df) +
geom_bar(aes(x = depression_severity, fill = gender))
# find the number of students who have been diagnosed depression
depression_diagnosis <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_diagnosis == "TRUE")
nrow(depression_diagnosis)
nrow(id)
# find the number of students
depression_depressiveness <- summary_data %>% filter(17 < age & age < 25) %>% filter(depressiveness == "TRUE")
View(depression_depressiveness)
depression_depressiveness
nrow(depression_depressiveness)
# find the number of students who have been diagnosed depression
depression_diagnosis <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_diagnosis == "TRUE")
nrow(depression_diagnosis)
depression_suicide <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_suicidal == "TRUE")
depression_suicidal <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_suicidal == "TRUE")
suicidal <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_suicidal == "TRUE")
depress_suicidal <- summary_data %>% filter(17 < age & age < 25) %>% filter(suicidal == "TRUE")
nrow(depression_suicide)
nrow(depress_suicidal)
# find the number of students who have been diagnosed depression
depression_diagnosis <- summary_data %>% filter(17 < age & age < 25) %>% filter(depression_diagnosis == "TRUE")
nrow(depression_diagnosis)
# find the number of students who experienced depression ()
depression_depressiveness <- summary_data %>% filter(17 < age & age < 25) %>% filter(depressiveness == "TRUE")
nrow(depression_depressiveness)
depress_suicidal <- summary_data %>% filter(17 < age & age < 25) %>% filter(suicidal == "TRUE")
nrow(depress_suicidal)
# Which gender has more
depression_gender <- summary_data %>% filter(17 < age & age < 25) %>%  select(gender, anxiety_severity, age) %>%
filter(anxiety_severity == "Modertaely severe" & "Severe")
nrow(depression_gender)
# Which gender has more
depression_gender <- summary_data %>% group_by(gender) %>% filter(17 < age & age < 25) %>%  select(gender, anxiety_severity, age) %>%
filter(anxiety_severity == "Modertaely severe" & "Severe")
# 3.a For each state, what is the county with the highest number of COVID cases? Make a dataframe that
# has every state and the county with the highest number of cases and corresponding rows
# (hint: you will need to use a grouping operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- counties %>% group_by(state) %>% select(state, county, cases) %>% filter(cases == max(cases, na.rm = TRUE)) %>% unique()
View(highest_cases_in_each_state)
# Which gender has more
depression_gender <- summary_data %>% group_by(gender) %>% select(gender, anxiety_severity, age) %>% filter(17 < age & age < 25) %>% filter(anxiety_severity == "Modertaely severe" & "Severe")
# Which gender has more
depression_gender <- summary_data %>% group_by(gender) %>% select(gender, anxiety_severity, age) %>% filter(17 < age & age < 25) %>%
filter(anxiety_severity == "Modertaely severe" & anxiety_severity =="Severe")
nrow(depression_gender)
View(depression_gender)
depression_gender <- summary_data %>% group_by(gender) %>% filter(17 < age & age < 25) %>%
filter(anxiety_severity == "Modertaely severe" & anxiety_severity =="Severe")
nrow(depression_gender)
# Which gender has more
depression_gender <- summary_data %>% group_by(gender)
depression_gender
View(depression_gender)
# Which gender has more
depression_gender <- summary_data %>% filter(gender == "female") %>% filter(anxiety_severity == "Moderately severe" & anxiety_severity == "Severe")
depression_gender
View(depression_gender)
# Which gender has more
depression_gender <- summary_data %>% select(gender == "female") %>% filter(anxiety_severity == "Moderately severe" & anxiety_severity == "Severe")
# Which gender has more
depression_gender <- summary_data %>% filter(gender == "female") %>% filter(anxiety_severity == "Moderately severe" & anxiety_severity == "Severe")
depression_gender
# Which gender has more
depression_gender <- summary_data %>% group_by(gender) %>% filter(anxiety_severity == "Moderately severe" & anxiety_severity == "Severe")
depression_gender
# Which gender has more
depression_gender <- summary_data %>% group_by(gender) %>% filter(17 < age & age < 25) %>% select(gender, anxiety_severity) %>%
filter(anxiety_severity == "Moderately severe" & anxiety_severity == "Severe")
depression_gender
View(depression_gender)
# Which gender has more
depression_gender <- summary_data %>% filter(gender == "female") %>% filter(17 < age & age < 25) %>% select(gender, anxiety_severity) %>%
filter(anxiety_severity == "Moderately severe" & anxiety_severity == "Severe")
depression_gender
# Which gender has more
depression_gender <- summary_data %>% filter(gender == "female" & age > 17 & age < 25) %>% select(gender, anxiety_severity) %>%
filter(anxiety_severity == "Moderately severe" & anxiety_severity == "Severe")
depression_gender
# Which gender has more
depression_gender <- summary_data %>% filter(gender == "female" & age > 17 & age < 25)
depression_gender
View(depression_gender)
# Which gender has more
depression_gender <- summary_data %>% filter(gender == "female" & age > 17 & age < 25) %>% filter(anxiety_severity == "Moderately severe" & anxiety_severity == "Severe")
depression_gender
# 4.a Create a `total_cases_counties` dataframe that adds up all the COIVD cases for all the counties
# for every date in the counties dataframe.
# You should name the columns `date` and `county_total_cases`.
total_cases_counties <- counties %>% group_by(date) %>% summarize(county_total_cases = sum(cases))
View(total_cases_counties)
# Which gender felt more anxiety?
depression_gender <- summary_data %>% filter(gender == "female" & age > 17 & age < 25) %>% (anxiousness == "TRUE")
# Which gender felt more anxiety?
depression_gender <- summary_data %>% filter(gender == "female" & age > 17 & age < 25) %>% filter(anxiousness == "TRUE")
nrow(depression_gender)
depression_gender_male <- summary_data %>% filter(gender == "male" & age > 17 & age < 25) %>% filter(anxiousness == "TRUE")
nrow(depression_gender_male)
# In which age group did the most suicide happen?
depression_suicidal_18 <- summary_data %>% filter(age == 18) %>% filter(suicidal == "TRUE")
nrow(depression_suicidal_18)
depression_suicidal_18 <- summary_data %>% filter(age == 18) %>% filter(suicidal == "TRUE")
nrow(depression_suicidal_18)
depression_suicidal_19 <- summary_data %>% filter(age == 19) %>% filter(suicidal == "TRUE")
nrow(depression_suicidal_19)
depression_suicidal_20 <- summary_data %>% filter(age == 20) %>% filter(suicidal == "TRUE")
nrow(depression_suicidal_20)
depression_suicidal_21 <- summary_data %>% filter(age == 21) %>% filter(suicidal == "TRUE")
nrow(depression_suicidal_21)
depression_suicidal_22 <- summary_data %>% filter(age == 22) %>% filter(suicidal == "TRUE")
nrow(depression_suicidal_22)
depression_suicidal_23 <- summary_data %>% filter(age == 23) %>% filter(suicidal == "TRUE")
nrow(depression_suicidal_23)
depression_suicidal_24 <- summary_data %>% filter(age == 24) %>% filter(suicidal == "TRUE")
nrow(depression_suicidal_24)
library(dplyr)
mentalhealth_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv", stringsAsFactors = FALSE)
dep_none <- mentalhealth_df %>% select(age, gender, school_year, depression_severity) %>% filter(depression_severity == "none")
View(dep_none)
```{r echo=FALSE, warning=FALSE, message=FALSE}
View(dep_none)
nrow(summary_data)
library(dplyr)
mentalhealth_df <- read.csv("https://raw.githubusercontent.com/info-201a-wi23/exploratory-analysis-BadaLee2000/main/depression_anxiety_data.csv", stringsAsFactors = FALSE)
dep_none <- mentalhealth_df %>% select(age, gender, school_year, depression_severity) %>% filter(depression_severity == "none")
dep_none_minimal <- mentalhealth_df %>% select(age, gender, school_year, depression_severity) %>% filter(depression_severity == "None-minimal")
dep_mild <-  mentalhealth_df %>% select(age, gender, school_year, depression_severity) %>% filter(depression_severity == "Mild")
dep_moderate <- mentalhealth_df %>% select(age, gender, school_year, depression_severity) %>% filter(depression_severity == "Moderate")
dep_moderately_severe <- mentalhealth_df %>% select(age, gender, school_year, depression_severity) %>% filter(depression_severity == "Moderately severe")
dep_severe <- mentalhealth_df %>% select(age, gender, school_year, depression_severity) %>% filter(depression_severity == "Severe")
anx_none <- mentalhealth_df %>% select(age, gender, school_year, anxiety_severity) %>% filter(anxiety_severity == 0)
anx_none_minimal <- mentalhealth_df %>% select(age, gender, school_year, anxiety_severity) %>% filter(anxiety_severity == "None-minimal")
anx_mild <-  mentalhealth_df %>% select(age, gender, school_year, anxiety_severity) %>% filter(anxiety_severity == "Mild")
anx_moderate <- mentalhealth_df %>% select(age, gender, school_year, anxiety_severity) %>% filter(anxiety_severity == "Moderate")
anx_moderately_severe <- mentalhealth_df %>% select(age, gender, school_year, anxiety_severity) %>% filter(anxiety_severity == "Moderately severe")
anx_severe <- mentalhealth_df %>% select(age, gender, school_year, anxiety_severity) %>% filter(anxiety_severity == "Severe")
View(dep_none)
View(dep_none)
View(dep_none_minimal)
View(dep_mild)
View(dep_moderate)
View(dep_moderately_severe)
View(dep_severe)
View(anx_none)
View(anx_none_minimal)
View(anx_mild)
View(anx_moderately_severe)
View(anx_severe)
```{r, echo = FALSE, code = readLines("table.R")}
library(knitr)
```{r, echo = FALSE, code = readLines("table.R")}
```{r, echo = FALSE, code = readLines("table.R")}
```{r, echo = FALSE, code = readLines("table.R")}
library("knitr")
```{r, echo = FALSE, code = readLines("table.R")}
Describe why you included the table and what information it reveals
```{r, echo = FALSE, code = readLines("table.R")}
